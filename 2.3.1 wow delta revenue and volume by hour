with ct as (
select *,
    d::DATE _date,
    EXTRACT(HOUR FROM d::TIME) AS hour,
    EXTRACT(YEAR FROM d::DATE) AS year
from 
	generate_series( '2022-01-01', '2023-01-01', INTERVAL '1 hour') d 
    -- generate_series('2021-12-01'::DATE, '2023-01-03'::DATE, '1 day'::INTERVAL) d,
    -- generate_series('2023-01-03 00:00'::TIMESTAMP, '2023-01-03 23:00'::TIMESTAMP, '1 hour'::INTERVAL) h
),
-- purchase and revenue during the hour
p as (
select *,
DATE(time_received) AS p_date,
EXTRACT(HOUR FROM time_received) AS p_hour
from purchases p 
),
p_agg as (
select ct._date, ct.hour, sum(coalesce(p.end_amount_with_vat_eur, 0)) rev -- ct.year, 
, sum(case when p.purchase_id is not null then 1 
		else 0 end) as vol
from ct 
left join p on ct._date= p.p_date and ct.hour= p.p_hour
group by ct._date, ct.hour -- , delivery_area_id
order by ct._date, ct.hour -- , delivery_area_id
), 
wow_p as (
select *
, lag(rev, 7) over(partition by hour order by _date) prev_w_rev
, lag(vol, 7) over(partition by hour order by _date) prev_w_vol
from p_agg
-- order by _date, hour
)
select _date, hour, rev, vol -- * 
, round(( (rev-nullif(prev_w_rev, 0))/nullif(prev_w_rev, 0) )*100, 1) wow_del_p_perc --nullif to avoid divide by zero error 
, round(( (vol::numeric -nullif(prev_w_vol, 0))/nullif(prev_w_vol, 0) )*100, 1) wow_del_v_perc
from wow_p
order by _date, hour
